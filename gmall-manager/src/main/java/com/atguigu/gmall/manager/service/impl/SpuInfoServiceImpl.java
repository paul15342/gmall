package com.atguigu.gmall.manager.service.impl;import com.alibaba.dubbo.config.annotation.Service;import com.atguigu.gmall.bean.*;import com.atguigu.gmall.manager.mapper.*;import com.atguigu.gmall.service.SpuInfoService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Servicepublic class SpuInfoServiceImpl implements SpuInfoService {    @Autowired    SpuInfoMapper spuInfoMapper;    @Autowired    SpuSaleAttrMapper spuSaleAttrMapper;    @Autowired    BaseSaleAttrMapper baseSaleAttrMapper;    @Autowired    SpuSaleAttrValueMapper spuSaleAttrValueMapper;    @Autowired    SpuImageMapper spuImageMapper;    @Override    public List<SpuInfo> getSpuList (String catalog3Id) {        SpuInfo spuInfo = new SpuInfo();        spuInfo.setCatalog3Id(catalog3Id);        return spuInfoMapper.select(spuInfo);    }    @Override    public List<BaseSaleAttr> getBaseSaleAttrList () {        return baseSaleAttrMapper.selectAll();    }    //添加spu    @Override    public void saveSpuInfo (SpuInfo spuInfo) {        if(spuInfo == null || spuInfo.getSpuSaleAttrList() == null){            throw new RuntimeException("没有添加销售属性");        }        //1, spu_info 插入信息  catlog3id, des, spu_name        spuInfo.setId(null);        spuInfoMapper.insertSelective(spuInfo);        String spuId = spuInfo.getId();        //2, spu_sale_attr 插入信息 spu_id, sale_attr_id, sale_attr_name        List<SpuSaleAttr> spuSaleAttrList = spuInfo.getSpuSaleAttrList();        for (SpuSaleAttr spuSaleAttr : spuSaleAttrList) {            spuSaleAttr.setId(null);            spuSaleAttr.setSpuId(spuId);            spuSaleAttrMapper.insertSelective(spuSaleAttr);            //3, spu_sale_atrr_value_name 插入信息 spu_id, sale_attr_id, sale_attr_name_value            List<SpuSaleAttrValue> spuSaleAttrValueList = spuSaleAttr.getSpuSaleAttrValueList();            for (SpuSaleAttrValue spuSaleAttrValue : spuSaleAttrValueList) {                spuSaleAttrValue.setSpuId(spuId);                spuSaleAttrValue.setId(null);                spuSaleAttrValueMapper.insertSelective(spuSaleAttrValue);            }        }        //4.在spu_img插入图片        List<SpuImage> spuImageList = spuInfo.getSpuImageList();        for (SpuImage spuImage : spuImageList) {            spuImage.setId(null);            spuImage.setSpuId(spuId);            spuImageMapper.insertSelective(spuImage);        }    }    @Override    public List<SpuSaleAttr>  getSpuSaleAttrs (String spuId) {        SpuSaleAttr spuSaleAttr = new SpuSaleAttr();        spuSaleAttr.setSpuId(spuId);        List<SpuSaleAttr> saleAttrs = spuSaleAttrMapper.select(spuSaleAttr);        for (SpuSaleAttr saleAttr : saleAttrs) {            String saleAttrId = saleAttr.getSaleAttrId();            SpuSaleAttrValue spuSaleAttrValue = new SpuSaleAttrValue();            spuSaleAttrValue.setSpuId(spuId);            spuSaleAttrValue.setSaleAttrId(saleAttrId);            List<SpuSaleAttrValue> saleAttrValue = spuSaleAttrValueMapper.select(spuSaleAttrValue);            saleAttr.setSpuSaleAttrValueList(saleAttrValue);        }        return saleAttrs;    }}